

$card_width: 100px;
$card_height: 200px;

.myt_card_back,
.myt_card {
    width: $card_width;
    height: $card_height;
    border: 1px solid black;
    box-shadow: 1px 1px 5px black;
    border-radius: 5px;

    //sprite positions
    background-size: 700% 400%;
    background-image: url("img/cards.jpg");
    @for $i from 0 through 26 {
        &[data-type="#{$i + 1}"] {
            background-position-x: math.div(($i % 7) * 100%, 6);//7 columns
            background-position-y: math.div(math.div($i - ($i % 7), 7) * 100%, 3);//7 columns , 4 rows
        }
    }

    &.myt_card_back{
        background-position-x: 100%;
        background-position-y: 33.33%;
    }

    position: relative; 
    &.selectable {
        box-shadow: 0px 0px 6px 6px #00ffff;
        cursor: pointer;
        &:hover {
            transform: scale(1.1);
        }
    }

    &.selected,
    &.selected:hover {
        //box-shadow: 0px 0px 7px 2px green;
        box-shadow: 0px 0px 6px 6px #d3ff00, 0px 0px 6px 6px #dfff00, 0px 0px 6px 6px #fffb00;
        //transform: scale(1.1);
        //z-index: 2;

        &.myt_selectedToDiscard{
            $cardscale: 1;
            .myt_card_wrapper::before{
                //align-items:center;
                background:#d1d1d1be;
                bottom:0;
                //Display a garbage over the card
                //content:"\f1f8";
                content:"";
                display:flex;
                font:normal normal normal 14px/1 FontAwesome;
                font-size: calc($cardscale * 60px);
                justify-content:center;
                left:0;
                position:absolute;
                right:0;
                top:0;
                z-index:10;
           }
        }
    }

    .myt_card_wrapper{//WRAPPER For text datas
        user-select: none;
    } 
 
}

.myt_card{
    .help-marker{
        left:40%;
    }
}
#myt_cards_reserve{
    //display: flex;
    //flex-flow: row;
    //flex-wrap: wrap;
    //align-items: center;
    //padding: 0px 5px;
}
.myt_cards_stack_resizable
 {
    display: flex;

    border-radius: 10px;
    //border: 2px solid black;
    box-shadow: 1px 1px 10px black;
    background-color: #d5a25782;
    position: relative;
    margin-left: 10px;

    $card_stack_diff_height_ratio: math.div(85, 100) ;
    @for $i from 1 through 12 {//6 should be enough to have each card, but we may earn all copies of 1 color at a time from reserve

        &[data-nbcards="#{$i}"]{//This number will be computed on JS side based on children
            //To prepare the height of the stack, we add 1 card_height for the top card, and then N-1 times the truncated part of the card
            height: calc( 0px 
                    + $card_height
                    + ($i - 1)  * calc((1 - $card_stack_diff_height_ratio) * $card_height )
                );
        }
    }

    .myt_cards_stack{
        
        display: flex;
        flex-flow: column;
        .myt_card{
            display: flex;
            flex-flow: row;
            flex-wrap: wrap;
            align-items: center;
        }
        .myt_card_resizeable{
            margin: 2px 5px;
        }
        .myt_card,
        .myt_card_resizeable {
            // Replaced by PREF below
            ////ORDER CARDS by type :
            //@for $i from 1 through 49 {
            //    &[data-type="#{$i}"] {
            //        order: $i;
            //    }
            //}
            

            //Stack cards 
            margin-bottom: calc( -1 * $card_stack_diff_height_ratio * $card_height);
            //z-index: 2;
            &:hover {
                //may interfere with tooltip
                //z-index: 100;
                :not(.tooltipable){
                    z-index: 100;
                }
            }
            &.selected{
                //Make the card a bit out of the stack
                //margin-left: -20px;
            }
        }

        &.selectable{
            cursor: pointer;
            //outline: 20px solid yellow;
            //Outline is fine but the height is not enough to see the bottom line -> let's add a border on sub cards
            border-top: 20px solid yellow;
            .myt_card{
                /*! outline: 20px solid yellow; */
                border: 20px solid yellow;
                border-top: none;
                margin-left: -20px;
            }
            &:hover {
                transform: scale(1.1);
            }
            &.selected{
                outline-color: rgb(255, 94, 0);
            }
        }
    } 
    
    &[data-color="1"] {//CARD_COLOR_BLUE
        order: 4;
    }
    &[data-color="2"] {//CARD_COLOR_GREEN
        order: 2;
    }
    &[data-color="3"] {//CARD_COLOR_PURPLE
        order: 1;
    }
    &[data-color="4"] {//CARD_COLOR_RED
        order: 3;
    }
}


body[data-myt_card_stack_order='1']{//PREF_CARD_STACK_ASC
    .myt_cards_stack{
        .myt_card,
        .myt_card_resizeable {
            //ORDER CARDS by type :
            @for $i from 1 through 49 {
                &[data-type="#{$i}"] {
                    order: $i;
                    z-index: 2 + $i;
                }
            }
        }
    }
}
body[data-myt_card_stack_order='2']{//PREF_CARD_STACK_DESC
    .myt_cards_stack{
        .myt_card,
        .myt_card_resizeable {
            //ORDER CARDS by type :
            @for $i from 1 through 49 {
                &[data-type="#{$i}"] {
                    order: 49-$i;
                    z-index: 3 + 49-$i;
                }
            }
        }
    }
}

#myt_cards_deck_container{
    &.selectable{
        cursor: pointer;
        outline: 5px solid yellow;
        border-radius: 3px;

        &:hover{
            transform: scale(1.1);
        }
        &.selected{
            outline-color: rgb(0, 255, 64);
        }
    }
    //FOR ANIMATION FOR HERE
    .myt_card{
        position: absolute;
        top: 0px;
    }
}
.myt_deck_size{
    user-select: none;
    position: absolute;
    top: 0px;
    text-align: center;
    width: 100%;
    color: white;
    text-shadow: -2px 0 #000, 0 2px #000, 2px 0 #000, 0 -2px #000;
    font-size: 25px;
    font-weight: 700;
}

#myt_players_table{
    display: flex;
    flex-flow: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;

    .myt_player_table{
        width: fit-content;
        display: flex;
        flex-flow: column;

        border-radius: 10px;
        border: 2px solid black;
        box-shadow: 1px 1px 10px black;
        background-color: #d5a25782;
        margin: 5px 10px;
        
        //width: 95%;
        //margin: 15px auto;
    }
    
    .myt_player_table_content{
        width: fit-content;
        display: flex;
        flex-flow: row;
    }

    .myt_player_table_title{
        text-align: center;
        padding: 0 7px;

        .myt_player_score_recap{
            display: none;
        }
    }

    .myt_player_cards{
        display: flex;
        flex-flow: row;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: flex-start;
        padding: 0px 5px;
        padding-bottom: 10px;

        min-height: $card_height;
                
        border-radius: 20px;
        column-gap: 10px;
        justify-content: space-evenly;
        row-gap: 10px;
        
        .myt_cards_stack_resizable{
            min-width: $card_width;
            $icon_height: 44px;

            &::before {//View COLOR icon behind stack
                content: "";
                display: inherit;
                opacity: 1;
                position: relative;
                width: $card_width;
                height: $card_height;
                margin-top: $card_height - $icon_height;
                margin-bottom: 0px;
                border-bottom-right-radius: 10px;
                border-bottom-left-radius: 10px;
            }    
            &[data-color="1"]::before {//CARD_COLOR_BLUE
                @include myt_icon_card_color_v2(0px,0px,$card_width, $icon_height);
            }
            &[data-color="2"]::before {//CARD_COLOR_GREEN
                @include myt_icon_card_color_v2(985px,0px,$card_width, $icon_height);
            }
            &[data-color="3"]::before {//CARD_COLOR_PURPLE
                @include myt_icon_card_color_v2(0px,437px,$card_width, $icon_height);
            }
            &[data-color="4"]::before {//CARD_COLOR_RED
                @include myt_icon_card_color_v2(985px,437px,$card_width, $icon_height);
            }
            
            .myt_cards_stack{
                //See card over icon background when present
                position: absolute;
            }
                
        }
    }
}

#myt_cards_draw{
    display: flex;
    flex-flow: row;
    flex-wrap: wrap;  
    align-items: center;
    justify-content: center;
    //width: calc(3 * $card_width);
    width: 100%;
    //margin-top: -92%;

    .myt_card{
        /*
        &[data-color="1"] {//CARD_COLOR_BLUE
            order: 4;
        }
        &[data-color="2"] {//CARD_COLOR_GREEN
            order: 2;
        }
        &[data-color="3"] {//CARD_COLOR_PURPLE
            order: 1;
        }
        &[data-color="4"] {//CARD_COLOR_RED
            order: 3;
        }
        */

        margin-left: calc(-0.7 * $card_width);
        &:nth-of-type(1){//FIRST card
            margin-left:0px;
        }
        .help-marker{
            top: 20%;
            left: 5%;
        }

        //&.selectable{
        //    z-index: 4;
        //    &:hover{
        //        z-index: 5;
        //    }
        //}
        
    }
}

.myt_card_tooltip{
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    hr{
        width: 100%;
    }
    .myt_card{
        //width: calc($card_width * 2);
        //height: calc($card_height * 2);
        width: 10em;
        height: 20em;
    }
    .myt_value_desc{
        //don't let a long desc be less pretty
        //width: calc($card_width * 2);
        width: 10em;
    }
}